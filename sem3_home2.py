# В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
# Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку

LENGTH_LIST = 10
my_str = '''
List, список является самой часто используемой коллекцией в Python. Прежде чем
говорить о списках, я напомню, что такое массив в информатике. Массив - это
непрерывная область в оперативной памяти компьютера, поделённая на ячейки
одинакового размера хранящие данные одного типа. Массивы могут быть
статическими, то есть размер массива нельзя изменить, и динамическими, когда
размер массива изменяется при добавлении или удалении элементов. Один из
самых больших плюсов в работе с массивами — это доступ к любой из его ячеек за
константное время.
Массив — упорядоченный набор элементов, каждый из которых хранит одно
значение, идентифицируемое с помощью одного или нескольких индексов. В
простейшем случае массив имеет постоянную длину и хранит единицы данных
одного и того же типа, а в качестве индексов выступают целые числа.
В информатике, список (англ. list) — это абстрактный тип данных, представляющий
собой упорядоченный набор значений, в котором некоторое значение может
встречаться более одного раза. Экземпляр списка является компьютерной
реализацией математического понятия конечной последовательности. Экземпляры
значений, находящихся в списке, называются элементами списка (англ. item, entry
либо element); если значение встречается несколько раз, каждое вхождение
считается отдельным элементом.
'''

new_str = my_str.replace('.','').replace(',','').replace(';','').replace('—','').replace('(','').replace(')','') \
        .replace('-','').replace('\n',' ').lower()
# print(new_str)
new_list = new_str.split(' ') # Создаем список
new_list_clear = []
for i in new_list:
  if i != '':
    new_list_clear.append(i)  # Убрали из списка элементы ''
# print(new_list_clear)

my_dict = {}

for i in new_list_clear:   # Создаем словарь количество_повторений: слова
  num = new_list_clear.count(i)
  if num in my_dict.keys() and i not in my_dict[num]: # Если количество есть в словаре и элемент еще не в словаре
      my_dict[num].append(i)
  else:
    my_dict[num] = [i]

keys_list = sorted(list(my_dict.keys()), reverse=True) # Упорядоченный списисок из ключей словаря

word_list = [] 

for i in keys_list:  # Создаем список списков из больших значений ключей 
  if len(word_list) <= LENGTH_LIST and i != 1:
    word_list.append(my_dict[i]) # На выходе может получиться список списков

final_list = [] # Получаем простой список
for i in word_list:
  final_list += i

print(f'\n Наиболее часто встречающиеся слова в тексте: \n \n{final_list}\n')

print('*************** дополнительно *****************\n')

for key, value in my_dict.items():
  if key != 1:
    print(f'Количество повторений слов(а) {value} составляет {key}')